# NOTE: you'll need to change the cert & key paths,
#       along with the cmyui.xyz domain.

# if you wish to only connect using fallback, you can
# remove all ssl related content from the configuration.

# by default, we'll use a unix socket.
upstream gulag {
	# gulag's unix socket!
	# this must be the same as gulag's
        # configured unix socket location.
	server unix:/tmp/gulag.sock fail_timeout=0;
}

server {
        listen 80;
        listen 443 ssl;
        # c[4-6|e]?.ppy.sh is used for bancho
        # a.ppy.sh is used for osu! avatars
        server_name ~^(?:c[e4-6]?)\.ppy\.sh$;

	# NOTE: you'll need to change these to your own cert & key paths.
        ssl_certificate     /home/osu/certs/cert.pem;
        ssl_certificate_key /home/osu/certs/key.pem;

        client_max_body_size 64m;

        location / {
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Real-IP  $remote_addr;
                proxy_set_header Host $http_host;
                proxy_redirect off;
                proxy_pass http://gulag;
        }
}

# c[4-6|e]?.ppy.sh is used for bancho
# osu.ppy.sh is used for /web, /api, etc.
# a.ppy.sh is used for osu! avatars

server {
        listen 80;
        listen 443 ssl;
        server_name a.ppy.sh;

	ssl_certificate     /etc/letsencrypt/live/cmyui.xyz/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/cmyui.xyz/privkey.pem;
	ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH:@SECLEVEL=1";

        client_max_body_size 64m;

        location / {
                return 301 https://a.sutekina.tk$request_uri;
        }
}

server {
        listen 80;
        listen 443 ssl;
        server_name a.sutekina.tk;

        ssl_certificate     /home/osu/certs/cert.pem;
        ssl_certificate_key /home/osu/certs/key.pem;

        client_max_body_size 64m;

        location / {
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Real-IP  $remote_addr;
                proxy_set_header Host $http_host;
                proxy_redirect off;
                proxy_pass http://gulag;
        }
}

server {
    	listen 80;
    	listen 443 ssl;
    	server_name osu.ppy.sh;

    	# NOTE: You'll want to change these to your own SSL certificate if any.
    	ssl_certificate     /home/osu/certs/cert.pem;
    	ssl_certificate_key /home/osu/certs/key.pem;

    	client_max_body_size 64m;
	
        location /sutekina.png {
                root /home/osu/img;
        }
        # gulag
        location ~ ^/(api|web|d|ss|users)/ {
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Real-IP  $remote_addr;
                proxy_set_header Host $http_host;
                proxy_redirect off;
                proxy_set_header X-Forwarded-Proto https;
                proxy_pass http://gulag;
    	}

        # gulag-web
        location / {
                return 301 https://sutekina.tk$request_uri;
        }
}

server {
        listen 80;
        listen 443 ssl;
        server_name www.sutekina.tk sutekina.tk;
        
        ssl_certificate /home/osu/certs/cert.pem;
        ssl_certificate_key /home/osu/certs/key.pem;

        client_max_body_size 64m;

        location /favicon.ico {
		root /home/osu/img;
	}
        location / {
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Real-IP  $remote_addr;
                proxy_set_header Host $http_host;
                proxy_set_header X-Forwarded-Proto https;
                proxy_redirect off;
                add_header "Access-Control-Allow-Origin" "*";

                # 8000 IS CURRENTLY THE DEFAULT ASSIGNED PORT WHEN RUNNING IN HYPERCORN (hypercorn main.py).
                # 5000 if you are running it with just python
                proxy_pass http://127.0.0.1:8000;
        }
}

server {
	listen 80;
	listen 443 ssl;
<<<<<<< HEAD
	server_name assets.sutekina.tk;
        
        ssl_certificate /home/osu/certs/cert.pem;
        ssl_certificate_key /home/osu/certs/key.pem;
=======
	server_name assets.cmyui.xyz;

	ssl_certificate     /etc/letsencrypt/live/cmyui.xyz/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/cmyui.xyz/privkey.pem;
	ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH:@SECLEVEL=1";
>>>>>>> e3ebcce5c6d6aa0a3f209a53519fa2a3bb3cb941

	location / {
		default_type image/png;
		root /home/osu/osu-gulag/.data/assets/;
	}
}

# server switcher support (temporary, -devserver is only supported by cuttingedge)
#server {
#	listen 80;
#	listen 443 ssl;
#	server_name ~^(?:c[e4-6]?|osu|a|b)\.ppy\.sh$;
#
#	ssl_certificate     /path/to/ppy_sh/cert.pem;
#	ssl_certificate_key /path/to/ppy_sh/key.pem;
#	ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH:@SECLEVEL=1";
#
#	client_max_body_size 64m;
#
#	location / {
#		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#		proxy_set_header X-Real-IP  $remote_addr;
#		proxy_set_header Host $http_host;
#		proxy_redirect off;
#		proxy_pass http://gulag;
#	}
#}

#server {
#	listen 80;
#	listen 443 ssl;
#	server_name assets.ppy.sh;
#
#	ssl_certificate     /path/to/ppy_sh/cert.pem;
#	ssl_certificate_key /path/to/ppy_sh/key.pem;
#	ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH:@SECLEVEL=1";
#
#	location / {
#		default_type image/png;
#		root /home/cmyui/programming/akatsuki/gulag/.data/assets/;
#	}
#}
